.Dd $Mdocdate: September 07 2023 $
.Dt C_ADT_LSORT 3
.Os
.Sh NAME
.Nm c_adt_lsort
.Nd sort list
.Sh LIBRARY
.Lb tertium
.Sh SYNOPSIS
.In tertium/cpu.h
.In tertium/std.h
.Ft void
.Fn c_adt_lsort "ctype_node **sp" "ctype_cmpfn f"
.Sh DESCRIPTION
The
.Fn c_adt_lsort
function sorts the list
.Fa sp .
The contents of the list
.Fa sp
are sorted in ascending order according to the comparison function
.Fa f .
.Sh EXAMPLES
.Bd -literal -offset indent
#include <tertium/cpu.h>
#include <tertium/std.h>

#define LNEWSTR(a) c_adt_lnew((a), sizeof((a)))

int
cmp(void *a, void *b)
{
	return c_str_cmp(a, -1, b);
}

int
main(void)
{
	ctype_node *tail = nil;
	/* push strings */
	if (c_adt_lpush(&tail, LNEWSTR("something")) < 0) return -1;
	if (c_adt_lpush(&tail, LNEWSTR("hello")) < 0) return -1;
	if (c_adt_lpush(&tail, LNEWSTR("foo")) < 0) return -1;
	if (c_adt_lpush(&tail, LNEWSTR("example")) < 0) return -1;
	/* sort */
	c_adt_lsort(&tail, &cmp);
	/* walk */
	tail = tail->next; /* set tail to head */
	do {
		c_ioq_fmt(ioq1, "%s\en", tail->p);
	} while((tail = tail->next)->prev); /* until it hits head again */
	c_ioq_flush(ioq1);
	return 0;
}
.Ed
