.Dd $Mdocdate: September 07 2023 $
.Dt C_ARR_TRUNC 3
.Os
.Sh NAME
.Nm c_arr_trunc
.Nd truncate array
.Sh LIBRARY
.Lb tertium
.Sh SYNOPSIS
.In tertium/cpu.h
.In tertium/std.h
.Ft ctype_status
.Fn c_arr_trunc "ctype_arr *p" "usize m" "usize n"
.Sh DESCRIPTION
The function sets the number of initialized objects, each
.Fa n
bytes in size, to
.Fa m
in the array
.Fa p ,
ensuring
.Fa m Ns \+1
to be zeroed.
If the number of initialized objects is smaller or equal to
.Fa m ,
nothing is done.
.Sh RETURN VALUES
.Rv -std
.Sh EXAMPLES
.Bd -literal -offset indent
/* buffer = "Hello " */
/* c_arr_fmt(&arr, "World") = "Hello World" */
c_arr_trunc(&arr, 0, sizeof(uchar));
/* c_arr_fmt(&arr, "World) = "World" */
.Ed
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er C_ERR_OVERFLOW
Value too large to be stored in data type.
.El
